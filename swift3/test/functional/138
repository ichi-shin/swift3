#!/bin/bash
# Copyright(c)2014 NTT corp. All Rights Reserved.
# DB1-1-8-3_1

. ./common

num=10

S3USER=tester

_gen_complete_xml()
{
    echo '<CompleteMultipartUpload>'

    for i in `seq $num`; do
        j=$(($i - 1))
        echo '<Part>'
        echo "<PartNumber>$i</PartNumber>"
        echo "<ETag>$(_etag ./data/segment_50M.dat_0$j)</ETag>"
        echo '</Part>'
    done

    echo '</CompleteMultipartUpload>'
}


_s3_put /bucket

upload_id=$(_s3_post /bucket/object?uploads \
    -H "x-amz-acl: public-read-write" \
    -H "x-amz-meta-hoge1: 1" \
    -H "x-amz-meta-hoge2: 2" \
    -H "x-amz-meta-hoge3: 3" | \
    _xpath '/InitiateMultipartUploadResult/UploadId/text()')

echo '<CompleteMultipartUpload>' > $tmp.complete.xml

for i in `seq $num`; do
    _random | dd of=$tmp.data bs=4k seek=1024 count=1 > /dev/null 2>&1

    echo "<Part>
<PartNumber>$i</PartNumber>
<ETag>$(_etag $tmp.data)</ETag>
</Part>" >> $tmp.complete.xml

    _s3_put /bucket/object?uploadId=${upload_id}\&partNumber=$i -T $tmp.data
done

echo '</CompleteMultipartUpload>' >> $tmp.complete.xml

_s3_post /bucket/object?uploadId=${upload_id} -T $tmp.complete.xml -D - | \
    _filter_curl xml


upload_id=$(_s3_post /bucket/object2?uploads \
    -H "x-amz-acl: public-read" \
    -H "x-amz-meta-hoge4: 4" \
    -H "x-amz-meta-hoge5: 5" \
    -H "x-amz-meta-hoge6: 6" | \
    _xpath '/InitiateMultipartUploadResult/UploadId/text()')

_s3_put /bucket/object2?uploadId=${upload_id}\&partNumber=1 -H "x-amz-copy-source: /bucket/object" -H "x-amz-copy-source-range: byte=0-5242879" | _filter_curl xml


_sw_get /bucket+segments | _filter_curl | sed -e "s/${upload_id}/UPLOAD_ID/g" | grep object2

